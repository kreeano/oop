package ru.mirea; // Определяет, что класс принадлежит пакету ru.mirea (структурирует код)
import java.util.Scanner; // Импортирует класс Scanner из пакета java.util, чтобы можно было использовать его для чтения ввода с клавиатуры.

public class lab2 { // Объявляет публичный класс с именем lab2
    // Объявление главного метода программы, доступного из любого места, который не возвращает значения.
    // Метод можно вызвать без создания объекта, и он принимает аргументы командной строки при запуске.
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in); // Создаёт объект Scanner для чтения ввода с клавиатуры

        // Ввод размера массива
        System.out.print("Введите размер массива: "); // Вывод текста
        int size = scanner.nextInt(); // Читает целое число, введённое пользователем, и сохраняет его в переменную size

        // Создание массива
        int[] numbers = new int[size]; // Создаёт массив целых чисел с размером, равным значению переменной size

        // Ввод элементов массива с помощью цикла do while
        int inputIndex = 0; // Инициализирует переменную inputIndex значением 0
        System.out.println("Введите элементы массива:"); // Вывод начального текста
        // Цикл do-while используется для ввода элементов массива.
        // Цикл гарантирует, что ввод хотя бы одного элемента будет выполнен перед проверкой условия.
        do {
            System.out.print("Элемент " + (inputIndex + 1) + ": "); // Вывод текста
            numbers[inputIndex] = scanner.nextInt(); // Читает целое число, введённое пользователем, и сохраняет его в элемент массива с индексом inputIndex
            inputIndex++; // Увеличивает значение переменной inputIndex на 1
        } while (inputIndex < size); // Цикл, который продолжает выполняться, пока значение inputIndex меньше size

        // Суммирование элементов массива с помощью цикла while
        int sum = 0; // Инициализирует переменную sum значением 0 для хранения суммы чисел
        int sumIndex = 0; // Инициализирует переменную sumIndex значением 0 для использования в цикле
        while (sumIndex < size) { // Цикл, который выполняется, пока значение переменной sumIndex меньше значения переменной size
            sum = sum + numbers[sumIndex]; // Добавляет значение элемента массива numbers с индексом sumIndex к переменной sum
            sumIndex++; // Увеличивает значение переменной sumIndex на 1
        }

        // Поиск минимального и максимального элементов массива
        // Ищем минимальное и максимальное значения в массиве
        // Цикл перебирает все элементы массива, сравнивает каждый элемент с текущими минимальным и максимальным значениями, и обновляет их при необходимости.
        // Начинаем с предположения, что первый элемент массива и есть минимальный и максимальный.
        // Проходим по всем элементам массива, обновляя min и max по мере необходимости.
        int min = numbers[0]; // Инициализирует переменную min значением первого элемента массива numbers
        int max = numbers[0]; // Инициализирует переменную max значением первого элемента массива numbers
        for (int j = 0; j < numbers.length; j++) { // Цикл, который проходит по каждому индексу массива numbers от 0 до numbers.length
            int num = numbers[j]; // Получает значение элемента массива numbers по индексу j и присваивает его переменной num
            if (num < min) { // Проверяет, является ли значение переменной num меньше значения переменной min
                min = num; // Обновляем min, если текущий элемент меньше min
            }
            if (num > max) { // Проверяет, является ли значение переменной num больше значения переменной max
                max = num; // Обновляем max, если текущий элемент больше max
            }
        }

        // Вывод результатов
        // Используется символ + для объединения строк и значений переменных в одну строку.
        System.out.println("Сумма элементов: " + sum);
        System.out.println("Минимальный элемент: " + min);
        System.out.println("Максимальный элемент: " + max);
    }
}
